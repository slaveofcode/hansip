on:
  release:
    types: [created]
  push:
    branches:
      - release/v0.1.0

env:
  hansip-webserver-ver: v0.1.0

jobs:
  release-linux-amd64:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v3
    - name: Download hansip-webserver Windows
      if: matrix.goos != 'windows'
      run: |
        wget https://github.com/slaveofcode/hansip-webserver/releases/download/${{ env.hansip-webserver-ver }}/hansip-web-server-${{ env.hansip-webserver-ver }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -O hansip-web-server.tar.gz
        tar -zxvf hansip-web-server.tar.gz
        echo "HWB=hansip-web-server" >> $GITHUB_ENV
    - name: Download hansip-webserver Unix
      if: matrix.goos == 'windows'
      run: |
        apt install unzip
        wget https://github.com/slaveofcode/hansip-webserver/releases/download/${{ env.hansip-webserver-ver }}/hansip-web-server-${{ env.hansip-webserver-ver }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip -O hansip-web-server.zip
        unzip hansip-web-server.zip
        echo "HWB=hansip-web-server" >> $GITHUB_ENV
    - uses: wangyoucao577/go-release-action@v1.32
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: https://go.dev/dl/go1.19.2.linux-amd64.tar.gz
        executable_compression: upx
        binary_name: "hansip-server"
        pre_command: ls -lah
        extra_files: LICENSE README.md ${{ env.HWB }}
